// Generated by view binder compiler. Do not edit!
package com.example.androidproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.androidproject.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnBack;

  @NonNull
  public final LinearLayout controlsLayout;

  @NonNull
  public final ProfileSettingsLayoutBinding profileSettingsLayout;

  @NonNull
  public final RecyclerView rvMyPosts;

  private FragmentProfileBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnBack, @NonNull LinearLayout controlsLayout,
      @NonNull ProfileSettingsLayoutBinding profileSettingsLayout,
      @NonNull RecyclerView rvMyPosts) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.controlsLayout = controlsLayout;
    this.profileSettingsLayout = profileSettingsLayout;
    this.rvMyPosts = rvMyPosts;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      MaterialButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.controlsLayout;
      LinearLayout controlsLayout = ViewBindings.findChildViewById(rootView, id);
      if (controlsLayout == null) {
        break missingId;
      }

      id = R.id.profileSettingsLayout;
      View profileSettingsLayout = ViewBindings.findChildViewById(rootView, id);
      if (profileSettingsLayout == null) {
        break missingId;
      }
      ProfileSettingsLayoutBinding binding_profileSettingsLayout = ProfileSettingsLayoutBinding.bind(profileSettingsLayout);

      id = R.id.rvMyPosts;
      RecyclerView rvMyPosts = ViewBindings.findChildViewById(rootView, id);
      if (rvMyPosts == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ConstraintLayout) rootView, btnBack, controlsLayout,
          binding_profileSettingsLayout, rvMyPosts);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
