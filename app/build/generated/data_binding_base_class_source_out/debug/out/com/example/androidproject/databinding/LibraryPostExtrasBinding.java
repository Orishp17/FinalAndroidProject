// Generated by view binder compiler. Do not edit!
package com.example.androidproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ListView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.androidproject.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LibraryPostExtrasBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnAddLink;

  @NonNull
  public final MaterialButton btnAddTag;

  @NonNull
  public final MaterialButton btnDismiss;

  @NonNull
  public final MaterialButton btnSaveChanges;

  @NonNull
  public final LinearLayout controlsLayout;

  @NonNull
  public final TextInputEditText etLinks;

  @NonNull
  public final TextInputLayout etLinksLayout;

  @NonNull
  public final TextInputEditText etTags;

  @NonNull
  public final TextInputLayout etTagsLayout;

  @NonNull
  public final ListView linksListView;

  @NonNull
  public final ListView tagsListView;

  private LibraryPostExtrasBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnAddLink, @NonNull MaterialButton btnAddTag,
      @NonNull MaterialButton btnDismiss, @NonNull MaterialButton btnSaveChanges,
      @NonNull LinearLayout controlsLayout, @NonNull TextInputEditText etLinks,
      @NonNull TextInputLayout etLinksLayout, @NonNull TextInputEditText etTags,
      @NonNull TextInputLayout etTagsLayout, @NonNull ListView linksListView,
      @NonNull ListView tagsListView) {
    this.rootView = rootView;
    this.btnAddLink = btnAddLink;
    this.btnAddTag = btnAddTag;
    this.btnDismiss = btnDismiss;
    this.btnSaveChanges = btnSaveChanges;
    this.controlsLayout = controlsLayout;
    this.etLinks = etLinks;
    this.etLinksLayout = etLinksLayout;
    this.etTags = etTags;
    this.etTagsLayout = etTagsLayout;
    this.linksListView = linksListView;
    this.tagsListView = tagsListView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LibraryPostExtrasBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LibraryPostExtrasBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.library_post_extras, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LibraryPostExtrasBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddLink;
      MaterialButton btnAddLink = ViewBindings.findChildViewById(rootView, id);
      if (btnAddLink == null) {
        break missingId;
      }

      id = R.id.btnAddTag;
      MaterialButton btnAddTag = ViewBindings.findChildViewById(rootView, id);
      if (btnAddTag == null) {
        break missingId;
      }

      id = R.id.btnDismiss;
      MaterialButton btnDismiss = ViewBindings.findChildViewById(rootView, id);
      if (btnDismiss == null) {
        break missingId;
      }

      id = R.id.btnSaveChanges;
      MaterialButton btnSaveChanges = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveChanges == null) {
        break missingId;
      }

      id = R.id.controlsLayout;
      LinearLayout controlsLayout = ViewBindings.findChildViewById(rootView, id);
      if (controlsLayout == null) {
        break missingId;
      }

      id = R.id.etLinks;
      TextInputEditText etLinks = ViewBindings.findChildViewById(rootView, id);
      if (etLinks == null) {
        break missingId;
      }

      id = R.id.etLinksLayout;
      TextInputLayout etLinksLayout = ViewBindings.findChildViewById(rootView, id);
      if (etLinksLayout == null) {
        break missingId;
      }

      id = R.id.etTags;
      TextInputEditText etTags = ViewBindings.findChildViewById(rootView, id);
      if (etTags == null) {
        break missingId;
      }

      id = R.id.etTagsLayout;
      TextInputLayout etTagsLayout = ViewBindings.findChildViewById(rootView, id);
      if (etTagsLayout == null) {
        break missingId;
      }

      id = R.id.linksListView;
      ListView linksListView = ViewBindings.findChildViewById(rootView, id);
      if (linksListView == null) {
        break missingId;
      }

      id = R.id.tagsListView;
      ListView tagsListView = ViewBindings.findChildViewById(rootView, id);
      if (tagsListView == null) {
        break missingId;
      }

      return new LibraryPostExtrasBinding((ConstraintLayout) rootView, btnAddLink, btnAddTag,
          btnDismiss, btnSaveChanges, controlsLayout, etLinks, etLinksLayout, etTags, etTagsLayout,
          linksListView, tagsListView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
