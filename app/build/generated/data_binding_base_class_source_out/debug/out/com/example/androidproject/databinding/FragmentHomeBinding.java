// Generated by view binder compiler. Do not edit!
package com.example.androidproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.androidproject.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout btnLogout;

  @NonNull
  public final MaterialCardView headerLayout;

  @NonNull
  public final RecyclerView rvLibraryPosts;

  @NonNull
  public final LinearLayout searchLayoutLibraryPosts;

  @NonNull
  public final MaterialCardView searchLibraryCard;

  @NonNull
  public final MaterialCardView topBar;

  @NonNull
  public final TextView userNameTv;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView, @NonNull LinearLayout btnLogout,
      @NonNull MaterialCardView headerLayout, @NonNull RecyclerView rvLibraryPosts,
      @NonNull LinearLayout searchLayoutLibraryPosts, @NonNull MaterialCardView searchLibraryCard,
      @NonNull MaterialCardView topBar, @NonNull TextView userNameTv) {
    this.rootView = rootView;
    this.btnLogout = btnLogout;
    this.headerLayout = headerLayout;
    this.rvLibraryPosts = rvLibraryPosts;
    this.searchLayoutLibraryPosts = searchLayoutLibraryPosts;
    this.searchLibraryCard = searchLibraryCard;
    this.topBar = topBar;
    this.userNameTv = userNameTv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogout;
      LinearLayout btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.headerLayout;
      MaterialCardView headerLayout = ViewBindings.findChildViewById(rootView, id);
      if (headerLayout == null) {
        break missingId;
      }

      id = R.id.rvLibraryPosts;
      RecyclerView rvLibraryPosts = ViewBindings.findChildViewById(rootView, id);
      if (rvLibraryPosts == null) {
        break missingId;
      }

      id = R.id.searchLayoutLibraryPosts;
      LinearLayout searchLayoutLibraryPosts = ViewBindings.findChildViewById(rootView, id);
      if (searchLayoutLibraryPosts == null) {
        break missingId;
      }

      id = R.id.searchLibraryCard;
      MaterialCardView searchLibraryCard = ViewBindings.findChildViewById(rootView, id);
      if (searchLibraryCard == null) {
        break missingId;
      }

      id = R.id.topBar;
      MaterialCardView topBar = ViewBindings.findChildViewById(rootView, id);
      if (topBar == null) {
        break missingId;
      }

      id = R.id.userNameTv;
      TextView userNameTv = ViewBindings.findChildViewById(rootView, id);
      if (userNameTv == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, btnLogout, headerLayout,
          rvLibraryPosts, searchLayoutLibraryPosts, searchLibraryCard, topBar, userNameTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
