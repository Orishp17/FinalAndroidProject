// Generated by Dagger (https://dagger.dev).
package com.example.androidproject.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import kotlinx.coroutines.CoroutineScope;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class AppModule_ProvideCoroutineScopeFactory implements Factory<CoroutineScope> {
  private final AppModule module;

  public AppModule_ProvideCoroutineScopeFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public CoroutineScope get() {
    return provideCoroutineScope(module);
  }

  public static AppModule_ProvideCoroutineScopeFactory create(AppModule module) {
    return new AppModule_ProvideCoroutineScopeFactory(module);
  }

  public static CoroutineScope provideCoroutineScope(AppModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideCoroutineScope());
  }
}
