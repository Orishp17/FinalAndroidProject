// Generated by Dagger (https://dagger.dev).
package com.example.androidproject.di;

import com.example.androidproject.network.HttpClient;
import com.example.androidproject.network.NpmRegistryClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class AppModule_ProvideNpmRegistryClientFactory implements Factory<NpmRegistryClient> {
  private final AppModule module;

  private final Provider<HttpClient> httpClientProvider;

  public AppModule_ProvideNpmRegistryClientFactory(AppModule module,
      Provider<HttpClient> httpClientProvider) {
    this.module = module;
    this.httpClientProvider = httpClientProvider;
  }

  @Override
  public NpmRegistryClient get() {
    return provideNpmRegistryClient(module, httpClientProvider.get());
  }

  public static AppModule_ProvideNpmRegistryClientFactory create(AppModule module,
      Provider<HttpClient> httpClientProvider) {
    return new AppModule_ProvideNpmRegistryClientFactory(module, httpClientProvider);
  }

  public static NpmRegistryClient provideNpmRegistryClient(AppModule instance,
      HttpClient httpClient) {
    return Preconditions.checkNotNullFromProvides(instance.provideNpmRegistryClient(httpClient));
  }
}
