// Generated by Dagger (https://dagger.dev).
package com.example.androidproject.di;

import android.content.SharedPreferences;
import com.example.androidproject.database.remote.LibraryPostRemoteAccess;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class PostsModule_ProvideLibraryPostRemoteAccessFactory implements Factory<LibraryPostRemoteAccess> {
  private final PostsModule module;

  private final Provider<SharedPreferences> spProvider;

  public PostsModule_ProvideLibraryPostRemoteAccessFactory(PostsModule module,
      Provider<SharedPreferences> spProvider) {
    this.module = module;
    this.spProvider = spProvider;
  }

  @Override
  public LibraryPostRemoteAccess get() {
    return provideLibraryPostRemoteAccess(module, spProvider.get());
  }

  public static PostsModule_ProvideLibraryPostRemoteAccessFactory create(PostsModule module,
      Provider<SharedPreferences> spProvider) {
    return new PostsModule_ProvideLibraryPostRemoteAccessFactory(module, spProvider);
  }

  public static LibraryPostRemoteAccess provideLibraryPostRemoteAccess(PostsModule instance,
      SharedPreferences sp) {
    return Preconditions.checkNotNullFromProvides(instance.provideLibraryPostRemoteAccess(sp));
  }
}
