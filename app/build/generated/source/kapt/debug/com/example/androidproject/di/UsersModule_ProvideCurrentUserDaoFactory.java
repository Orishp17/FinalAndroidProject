// Generated by Dagger (https://dagger.dev).
package com.example.androidproject.di;

import com.example.androidproject.database.local.AppDatabase;
import com.example.androidproject.database.local.CurrentUserDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class UsersModule_ProvideCurrentUserDaoFactory implements Factory<CurrentUserDao> {
  private final UsersModule module;

  private final Provider<AppDatabase> databaseProvider;

  public UsersModule_ProvideCurrentUserDaoFactory(UsersModule module,
      Provider<AppDatabase> databaseProvider) {
    this.module = module;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public CurrentUserDao get() {
    return provideCurrentUserDao(module, databaseProvider.get());
  }

  public static UsersModule_ProvideCurrentUserDaoFactory create(UsersModule module,
      Provider<AppDatabase> databaseProvider) {
    return new UsersModule_ProvideCurrentUserDaoFactory(module, databaseProvider);
  }

  public static CurrentUserDao provideCurrentUserDao(UsersModule instance, AppDatabase database) {
    return Preconditions.checkNotNullFromProvides(instance.provideCurrentUserDao(database));
  }
}
